name: CI-push

on:
  push:
    branches:
      - main

  merge_group:
    types:
      - checks_requested

  pull_request:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  CARGO_INCREMENTAL: 0
  CARGO_NET_RETRY: 10
  RUSTUP_MAX_RETRIES: 10
  RUST_BACKTRACE: short

jobs:
  formatting:
    name: Check formatting
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install Rust
        uses: dtolnay/rust-toolchain@master
        with:
          toolchain: nightly
          components: rustfmt

      - name: Check formatting
        shell: bash
        run: cargo +nightly fmt --all --check

  check-msrv:
    name: Check compilation on MSRV toolchain
    runs-on: ${{ matrix.runner }}

    env:
      RUSTFLAGS: "-D warnings"

    strategy:
      fail-fast: true
      matrix:
        runner:
          - ubuntu-latest
          - macos-latest
          - windows-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install mold linker
        uses: rui314/setup-mold@v1
        if: ${{ runner.os == 'Linux' }}
        with:
          make-default: true

      - name: Get rust version from Cargo.toml
        shell: bash
        run: |
          rust_version=$(yq -oy '.package.rust-version' Cargo.toml)
          echo "rust_version=${rust_version}" >> $GITHUB_ENV

      - name: Install Rust
        uses: dtolnay/rust-toolchain@master
        with:
          toolchain: "${{ env.rust_version }}"

      - name: Install Protoc
        uses: arduino/setup-protoc@v3
        with:
          repo-token: ${{ secrets.GITHUB_TOKEN }}

      - uses: Swatinem/rust-cache@v2.7.0
        with:
          save-if: ${{ github.event_name == 'push' }}

      - name: Install sccache
        uses: taiki-e/install-action@v2.33.28
        with:
          tool: sccache
          checksum: true

      - name: Install cargo-hack
        uses: taiki-e/install-action@v2.33.28
        with:
          tool: cargo-hack
          checksum: true

      - name: Install just
        uses: taiki-e/install-action@v2.41.10
        with:
          tool: just
          checksum: true

      - name: Cargo build release
        if: ${{ github.event_name == 'merge_group' }}
        shell: bash
        run: cargo check --features "release"

  test:
    name: Run tests on stable toolchain
    runs-on: ${{ matrix.runner }}

    env:
      RUSTFLAGS: "-D warnings"

    strategy:
      fail-fast: true
      matrix:
        runner:
          - ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Install mold linker
        uses: rui314/setup-mold@v1
        if: ${{ runner.os == 'Linux' }}
        with:
          make-default: true

      - name: Install Rust
        uses: dtolnay/rust-toolchain@master
        with:
          toolchain: stable 2 weeks ago
          components: clippy

      - name: Install Protoc
        uses: arduino/setup-protoc@v3
        with:
          repo-token: ${{ secrets.GITHUB_TOKEN }}

      - name: Install sccache
        uses: taiki-e/install-action@v2.33.28
        with:
          tool: sccache
          checksum: true

      - name: Install cargo-hack
        uses: taiki-e/install-action@v2.33.28
        with:
          tool: cargo-hack
          checksum: true

      - uses: Swatinem/rust-cache@v2.7.0
        with:
          save-if: ${{ github.event_name == 'push' }}

      - name: Run clippy
        shell: bash
        run: cargo clippy

      - name: Cargo build release
        if: ${{ github.event_name == 'merge_group' }}
        shell: bash
        run: cargo check --features "release"

  typos:
    name: Spell check
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Spell check
        uses: crate-ci/typos@master
